//#ifdef GLIB
//    #define hash_insert(hash, s2, s3)  g_hash_table_insert(hash, (gpointer)s2, (gpointer)s3); 
//#endif

//#ifdef QT
//    #define hash_insert(hash, s2, s3)  hash->insert(s2, s3);
//#endif

    #define hash_insert(hash, s2, s3) xmlHashAddEntry(hash, (const xmlChar *)s2, (void *)(s3)); 

    hash_insert(hash, "20111d", "17");
    hash_insert(hash, "30009d", "9");
    hash_insert(hash, "31009d", "9");

    hash_insert(hash, "50110d", "39");
    hash_insert(hash, "50110n", "45");
    hash_insert(hash, "50210d", "39");
    hash_insert(hash, "50210n", "40");
    hash_insert(hash, "50310d", "39");
    hash_insert(hash, "50010d", "39");
    hash_insert(hash, "50010n", "45");

    hash_insert(hash, "52009d", "11");
    hash_insert(hash, "52009n", "11");

    hash_insert(hash, "52109d", "12");
    hash_insert(hash, "52109n", "12");

    hash_insert(hash, "60013d", "14");
    hash_insert(hash, "60013n", "14");
    hash_insert(hash, "60113d", "14");
    hash_insert(hash, "60113n", "14");
    hash_insert(hash, "61613d", "5");
    hash_insert(hash, "62013n", "14");

    hash_insert(hash, "70150d", "20");
    hash_insert(hash, "70150n", "20");
    hash_insert(hash, "72150d", "21");
    hash_insert(hash, "72150n", "21");
    hash_insert(hash, "74150n", "20");
    hash_insert(hash, "74150d", "20");
    hash_insert(hash, "80001n", "31");
    hash_insert(hash, "80001d", "32");
    hash_insert(hash, "80001dd", "32");
    hash_insert(hash, "80002d", "34");
    hash_insert(hash, "80002n", "33");
    hash_insert(hash, "80102d", "34");
    hash_insert(hash, "80102n", "33");

    hash_insert(hash, "80203d", "30");
    hash_insert(hash, "80203n", "27");

    hash_insert(hash, "80304d", "28");
    hash_insert(hash, "80304n", "26");

    hash_insert(hash, "80404d", "26");
    hash_insert(hash, "80404n", "26");

