def readVarFile() {
    def filepath = "../VARIABLES.txt"
    if (!project.file(filepath).exists()){ 
        filepath= "../src/VARIABLES.txt"
    }
    File varFile = file(filepath)
    def qtVars = [:]
    varFile.eachLine { line ->
        if (line.trim()) {
          def eq = line.indexOf('=')
          if (eq > 0) {
              def key = line.substring(0, eq)
              def value = line.substring(eq+1)
              qtVars."$key" = value
          }
        }
    }
    return qtVars
}

def QtApp = readVarFile()


buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
    }
}

repositories {
    google()
    jcenter()
}

apply plugin: 'com.android.application'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}
def versionMajor = QtApp.VERSION_MAJOR.toInteger()
def versionMinor = QtApp.VERSION_MINOR.toInteger()
def versionBuild = QtApp.VERSION_BUILD.toInteger()


android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qt5AndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    compileSdkVersion androidCompileSdkVersion.toInteger()

    buildToolsVersion androidBuildToolsVersion

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5AndroidDir + '/src', 'src', 'java']
            aidl.srcDirs = [qt5AndroidDir + '/src', 'src', 'aidl']
            res.srcDirs = [qt5AndroidDir + '/res', 'res']
            resources.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
       }
    }

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        versionCode versionMajor * 100000 + versionMinor * 1000 + versionBuild * 100
        versionName QtApp.VERSION_STR
    }

}
